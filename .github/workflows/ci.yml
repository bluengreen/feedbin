name: CI

on: [push, pull_request]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
        ruby: [2.6, 2.7]

    runs-on: ${{ matrix.os }}

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v2

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}

    - name: Install system dependencies
      run: |
        set -eux
        sudo gem install bundler
        wget --quiet --output-document - https://packages.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
        echo "deb http://packages.elastic.co/elasticsearch/2.x/debian stable main" | sudo tee /etc/apt/sources.list.d/elasticsearch-2.x.list

        curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -

        wget --quiet --output-document - https://download.bell-sw.com/pki/GPG-KEY-bellsoft | sudo apt-key add -
        echo "deb [arch=amd64] https://apt.bell-sw.com/ stable main" | sudo tee /etc/apt/sources.list.d/bellsoft.list

        sudo apt-get update

        java -version

        sudo apt remove openjdk-11-jre-headless openjdk-11-jre openjdk-11-jdk-headless openjdk-11-jdk

        sudo apt-get install --yes \
        bellsoft-java8             \
        elasticsearch              \
        imagemagick                \
        libcurl4-openssl-dev       \
        libffi-dev                 \
        libidn11-dev               \
        libmagickwand-dev          \
        libpq-dev                  \
        libreadline-dev            \
        libssl-dev                 \
        libxml2-dev                \
        libxslt1-dev               \
        memcached                  \
        nodejs                     \
        postgresql-client-11       \
        zlib1g-dev

        java -version

        sudo systemctl start elasticsearch

        sudo wget --quiet "https://chromedriver.storage.googleapis.com/2.36/chromedriver_linux64.zip" --output-document /tmp/chromedriver.zip
        sudo unzip /tmp/chromedriver.zip -d /tmp/
        sudo mv /tmp/chromedriver /usr/local/bin/

        sudo wget --quiet "https://feedbin-ci.s3.amazonaws.com/kindlegen/kindlegen" --output-document /tmp/kindlegen
        sudo mv /tmp/kindlegen /usr/local/bin/
        sudo chmod +x /usr/local/bin/kindlegen

        sudo systemctl status elasticsearch

      if: matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04'

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: bundle-use-ruby-${{ matrix.os }}-${{ matrix.ruby }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-${{ matrix.os }}-${{ matrix.ruby }}-

    - name: bundle install
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4

    - name: Build and test with Rake
      env:
        PGHOST: 127.0.0.1
        PGUSER: postgres
        POSTGRES_PASSWORD: postgres
        PGPASSWORD: postgres
        RAILS_ENV: test
        KINDLEGEN_PATH: /usr/local/bin/kindlegen
      run: |
        psql -c 'create database feedbin_test;' -U postgres
        bundle exec rake db:setup
        bundle exec rake db:test:prepare
        bundle exec rails test:system test

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: screenshots ${{ matrix.os }}-${{ matrix.ruby }}
        path: tmp/screenshots
        if-no-files-found: ignore